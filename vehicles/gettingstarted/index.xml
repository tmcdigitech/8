<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>8 Digital Tech – Getting Started</title><link>https://tmcdigitech.github.io/8/vehicles/gettingstarted/</link><description>Recent content in Getting Started on 8 Digital Tech</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://tmcdigitech.github.io/8/vehicles/gettingstarted/index.xml" rel="self" type="application/rss+xml"/><item><title>Vehicles: Installing software</title><link>https://tmcdigitech.github.io/8/vehicles/gettingstarted/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/8/vehicles/gettingstarted/installation/</guid><description>
&lt;p>To control the LEGO Mindstorms robots running ev3dev, you will need to:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Open the &lt;strong>Company Portal&lt;/strong>:
&lt;img src="https://image.winudf.com/v2/image1/Y29tLm1pY3Jvc29mdC53aW5kb3dzaW50dW5lLmNvbXBhbnlwb3J0YWxfaWNvbl8xNjEwNDgyMDcyXzA1MQ/icon.png?w=&amp;amp;fakeurl=1" alt="Company Portal Logo">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Find and install &lt;strong>Visual Studio Code&lt;/strong> (NOT Visual Studio Community):
&lt;img src="../Visual_Studio_Code_1.35_icon.svg" alt="Visual Studio Code logo">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install the &lt;strong>EV3 MicroPython&lt;/strong> extension
&lt;img src="https://pybricks.com/ev3-micropython/_images/store_label.png" alt="Installing the EV3 MicroPython extension">&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Vehicles: Using the EV3 brick</title><link>https://tmcdigitech.github.io/8/vehicles/gettingstarted/usingev3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/8/vehicles/gettingstarted/usingev3/</guid><description>
&lt;p>&lt;em>Taken from &lt;a href="https://pybricks.com/ev3-micropython/startbrick.html">pybricks.com&lt;/a>&lt;/em>&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/ev3brick.png"/> &lt;figcaption>
&lt;h4>An EV3 brick&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="turning-the-ev3-brick-on-and-off">Turning the EV3 Brick on and off&lt;/h2>
&lt;p>Turn on the EV3 Brick by pressing the dark gray center button.&lt;/p>
&lt;p>The boot process may take several minutes. While booting, the EV3 Brick status light turns orange and blinks intermittently, and you’ll see a lot of text on the EV3 screen. The EV3 Brick is ready for use when the status light turns green.&lt;/p>
&lt;p>To turn the EV3 Brick off, open the shutdown menu with the back button, and then select Power Off using the center button, as shown in Figure 5.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/onoff_label.png"/> &lt;figcaption>
&lt;h4>Figure 5: Turning the EV3 Brick off&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="viewing-motor-and-sensor-values">Viewing motor and sensor values&lt;/h2>
&lt;p>When you’re not running a program, you can view motor and sensor values using the device browser, as shown in Figure 6.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/devicebrowser_label.png"/> &lt;figcaption>
&lt;h4>Figure 6: Viewing motor and sensor values&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="running-a-program-without-a-computer">Running a program without a computer&lt;/h2>
&lt;p>You can run previously downloaded programs directly from the EV3 Brick.&lt;/p>
&lt;p>To do so, find the program using the file browser on the EV3 screen and press the center button key to start the program as shown in Figure 7.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/manualrun_label.png"/> &lt;figcaption>
&lt;h4>Figure 7: Starting a program using the buttons on the EV3 Brick&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>Vehicles: Creating and running programs</title><link>https://tmcdigitech.github.io/8/vehicles/gettingstarted/creatingprograms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/8/vehicles/gettingstarted/creatingprograms/</guid><description>
&lt;p>&lt;em>Taken from &lt;a href="https://pybricks.com/ev3-micropython/startrun.html">pybricks.com&lt;/a>&lt;/em>&lt;/p>
&lt;hr>
&lt;h2 id="project-structure">Project structure&lt;/h2>
&lt;p>Now that you’ve set up your computer and EV3 Brick, you’re ready to start writing programs.&lt;/p>
&lt;p>To make it easier to create and manage your programs, let’s first have a quick look at how MicroPython projects and programs for your EV3 robots are organized.&lt;/p>
&lt;p>Programs are organized into &lt;em>project folders&lt;/em>, as shown in Figure 8. A project folder is a directory/folder on your computer that contains the main program (&lt;strong>main.py&lt;/strong>) and other optional scripts or files. This project folder and all of its contents will be copied to the EV3 Brick, where the main program will be run.&lt;/p>
&lt;p>This page shows you how to create such a project and how to transfer it to the EV3 Brick.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/projectstructure_label.png"/> &lt;figcaption>
&lt;h4>Figure 8: A project contains a program called main.py and optional resources like sounds or MicroPython modules.&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="creating-a-new-project">Creating a new project&lt;/h2>
&lt;p>To create a new project, open the EV3 MicroPython tab and click &lt;em>create a new project&lt;/em>, as shown in Figure 9. Enter a project name in the text field that appears and press &lt;kbd>Enter&lt;/kbd>. When prompted, choose a location for this program and confirm by clicking &lt;em>choose folder&lt;/em>.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/newproject_label.png"/> &lt;figcaption>
&lt;h4>Figure 9: Creating a new project. This example is called getting_started, but you can choose any name.&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>When you create a new project, it already includes a file called &lt;em>main.py&lt;/em>. To see its contents and to modify it, open it from the file browser as shown in Figure 10. This is where you’ll write your programs.&lt;/p>
&lt;p>If you are new to MicroPython programming, we recommend that you keep the existing code in place and add your code to it.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/projectoverview_label.png"/> &lt;figcaption>
&lt;h4>Figure 10: Opening the default main.py program.&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="opening-an-existing-project">Opening an existing project&lt;/h2>
&lt;p>To open a project you created previously, click &lt;em>File&lt;/em> and click &lt;em>Open Folder&lt;/em>, as shown in Figure 11. Next, navigate to your previously created project folder and click &lt;em>OK&lt;/em>. You can also open your recently used projects using the &lt;em>Open Recent&lt;/em> menu option.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/existingproject_label.png"/> &lt;figcaption>
&lt;h4>Figure 11: Opening a previously created project.&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="connecting-to-the-ev3-brick-with-visual-studio-code">Connecting to the EV3 Brick with Visual Studio Code&lt;/h2>
&lt;p>To be able to transfer your code to the EV3 Brick, you’ll first need to connect the EV3 Brick to your computer with the mini-USB cable and configure the connection with Visual Studio Code. To do so:&lt;/p>
&lt;ul>
&lt;li>Turn the EV3 Brick on&lt;/li>
&lt;li>Connect the EV3 Brick to your computer with the mini-USB cable&lt;/li>
&lt;li>Configure the USB connection as shown in Figure 12.&lt;/li>
&lt;/ul>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/connecting_label.png"/> &lt;figcaption>
&lt;h4>Figure 12: Configuring the USB connection between the computer and the EV3 Brick&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="downloading-and-running-a-program">Downloading and running a program&lt;/h2>
&lt;p>You can press the &lt;kbd>F5&lt;/kbd> key to run the program. Alternatively, you can start it manually by going to the &lt;em>debug&lt;/em> tab and clicking the green start arrow, as shown in Figure 13.&lt;/p>
&lt;p>When the program starts, a pop-up toolbar allows you to stop the program if necessary. You can also stop the program at any time using the back button on the EV3 Brick.&lt;/p>
&lt;p>If your program produces any output with the &lt;code>print&lt;/code> command, this is shown in the output window.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/running_label.png"/> &lt;figcaption>
&lt;h4>Figure 13: Running a program&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="expanding-the-example-program">Expanding the example program&lt;/h2>
&lt;p>Now that you’ve run the basic code template, you can expand the program to make a motor move. First, attach a Large Motor to Port B on the EV3 Brick, as shown in Figure 14.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/firstprogram_label.png"/> &lt;figcaption>
&lt;h4>Figure 14: The EV3 Brick with a Large Motor attached to port B.&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Next, edit &lt;em>main.py&lt;/em> to make it look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">#!/usr/bin/env pybricks-micropython&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.hubs &lt;span style="color:#ff79c6">import&lt;/span> EV3Brick
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.ev3devices &lt;span style="color:#ff79c6">import&lt;/span> Motor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.parameters &lt;span style="color:#ff79c6">import&lt;/span> Port
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Create your objects here&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the EV3 Brick.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ev3 &lt;span style="color:#ff79c6">=&lt;/span> EV3Brick()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize a motor at port B.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test_motor &lt;span style="color:#ff79c6">=&lt;/span> Motor(Port&lt;span style="color:#ff79c6">.&lt;/span>B)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Write your program here&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Play a sound.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ev3&lt;span style="color:#ff79c6">.&lt;/span>speaker&lt;span style="color:#ff79c6">.&lt;/span>beep()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Run the motor up to 500 degrees per second. To a target angle of 90 degrees.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test_motor&lt;span style="color:#ff79c6">.&lt;/span>run_target(&lt;span style="color:#bd93f9">500&lt;/span>, &lt;span style="color:#bd93f9">90&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Play another beep sound.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ev3&lt;span style="color:#ff79c6">.&lt;/span>speaker&lt;span style="color:#ff79c6">.&lt;/span>beep(frequency&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">1000&lt;/span>, duration&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">500&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This program makes your robot beep, rotate the motor, and beep again with a higher pitched tone. Run the program to make sure that it works as expected.&lt;/p>
&lt;h2 id="managing-files-on-the-ev3-brick">Managing files on the EV3 Brick&lt;/h2>
&lt;p>After you’ve downloaded a project to the EV3 Brick, you can run, delete, or back up programs stored on it using the device browser as shown in Figure 15.&lt;/p>
&lt;figure>
&lt;img src="https://pybricks.com/ev3-micropython/_images/files_label.png"/> &lt;figcaption>
&lt;h4>Figure 15: Using the EV3 device browser to manage files on your EV3 Brick&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>Vehicles: Structure of program</title><link>https://tmcdigitech.github.io/8/vehicles/gettingstarted/programstructure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/8/vehicles/gettingstarted/programstructure/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>The basic structure of any EV3 program is:&lt;/p>
&lt;ul>
&lt;li>the &lt;em>shebang&lt;/em> line&lt;/li>
&lt;li>the docstring&lt;/li>
&lt;li>import libraries&lt;/li>
&lt;li>setup&lt;/li>
&lt;li>program body (the part where you tell the robot what to do)&lt;/li>
&lt;/ul>
&lt;h2 id="shebang-">Shebang #!&lt;/h2>
&lt;p>The &lt;a href="https://en.wikipedia.org/wiki/Shebang_(Unix)">&lt;strong>shebang&lt;/strong>&lt;/a> line is a piece of Unix
trickery from about 1980 which has stuck around because it is
rather useful. You don&amp;rsquo;t need to understand what it is doing
or why it is there, but it is &lt;strong>vitally important&lt;/strong>
(in big letters) that this line appears exactly as it does
below, and that it is at the very start of the program
file (no blank lines above it, or spaces in front of it).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">#!/usr/bin/env pybricks-micropython
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If your program doesn&amp;rsquo;t work, check this first!&lt;/p>
&lt;h2 id="docstring">Docstring&lt;/h2>
&lt;p>The next lines, within the &lt;code>&amp;quot;&amp;quot;&amp;quot;&lt;/code> (three double-quote marks), are explanatory text
about what the program in this file does. It is customary
to do this in Python for the benefit of anyone else who might
come across your code (including you in the future), but your
program will work if you don&amp;rsquo;t.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">Example LEGO® MINDSTORMS® EV3 Robot Educator Driving Base Program
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">-----------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">This program requires LEGO® EV3 MicroPython v2.0.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">Download: https://education.lego.com/en-us/support/mindstorms-ev3/python-for-ev3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">Building instructions can be found at:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">https://education.lego.com/en-us/support/mindstorms-ev3/building-instructions#robot
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="importing">Importing&lt;/h2>
&lt;p>&lt;em>see &lt;a href="https://tmcdigitech.github.io/8/glossary/import/">import&lt;/a> for more detail&lt;/em>&lt;/p>
&lt;p>Any but the simplest of programs will use code from one
or more modules. A &lt;em>module&lt;/em> is chunk of code that does
some useful stuff that lots of different developers
would want to do again and again: do maths,
search for and sort data,
connect to and work with databases, use various
bits of hardware (like an EV3 brick!).
There is a standard library included with
Python, where the most common modules can be found, and
you can download and use other modules when you need to.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.hubs &lt;span style="color:#ff79c6">import&lt;/span> EV3Brick
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#3d3f4a">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.parameters &lt;span style="color:#ff79c6">import&lt;/span> Port, Stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.robotics &lt;span style="color:#ff79c6">import&lt;/span> DriveBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.tools &lt;span style="color:#ff79c6">import&lt;/span> wait
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.ev3devices &lt;span style="color:#ff79c6">import&lt;/span> Motor, TouchSensor, ColorSensor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the code above, you can get the sense that &lt;code>pybricks&lt;/code>
is a very large library with lots of different parts.
One of those parts is called &lt;code>parameters&lt;/code>, and on the
highlighted line we tell the computer we will need two
things from the parameter part of the pybricks module:
the things called &lt;code>Port&lt;/code> and &lt;code>Stop&lt;/code>. The dot notation is
how you show things that are parts of other things:&lt;/p>
&lt;ul>
&lt;li>&lt;code>pybricks.parameters&lt;/code> means the &lt;code>parameters&lt;/code> part of &lt;code>pybricks&lt;/code>;&lt;/li>
&lt;li>&lt;code>pybricks.parameters.Stop&lt;/code> means the &lt;code>Stop&lt;/code> part of the &lt;code>parameters&lt;/code> part of &lt;code>pybricks&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="setup">Setup&lt;/h2>
&lt;p>Now that we have all the bits of code we will need, we
need to tell the computer about the things we&amp;rsquo;ll be using
and where they&amp;rsquo;re connected.&lt;/p>
&lt;p>We need to set up:&lt;/p>
&lt;ul>
&lt;li>the EV3 brick itself,&lt;/li>
&lt;li>the motors&lt;/li>
&lt;li>the &lt;code>DriveBase&lt;/code>, if it&amp;rsquo;s a vehicle,&lt;/li>
&lt;li>the sensors that we are using,
making sure that the ports you
list in this part of the code match up with where you&amp;rsquo;ve
actually connected each of the components.&lt;/li>
&lt;/ul>
&lt;p>Since we are making a vehicle that drives, rather than,
say, a stationary factory robot on an assembly line, we
set up the motors for our wheels using a &lt;code>DriveBase&lt;/code>,
which has a lot of handy driving-around kind of functions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the EV3 Brick. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ev3 &lt;span style="color:#ff79c6">=&lt;/span> EV3Brick()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the motors. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>left_motor &lt;span style="color:#ff79c6">=&lt;/span> Motor(Port&lt;span style="color:#ff79c6">.&lt;/span>B)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>right_motor &lt;span style="color:#ff79c6">=&lt;/span> Motor(Port&lt;span style="color:#ff79c6">.&lt;/span>C)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the drive base. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>robot &lt;span style="color:#ff79c6">=&lt;/span> DriveBase(left_motor, right_motor, wheel_diameter&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">55.5&lt;/span>, axle_track&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">104&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the Touch Sensor. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch_sensor &lt;span style="color:#ff79c6">=&lt;/span> TouchSensor(Port&lt;span style="color:#ff79c6">.&lt;/span>S1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the Colour Sensor. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>color_sensor &lt;span style="color:#ff79c6">=&lt;/span> ColorSensor(Port&lt;span style="color:#ff79c6">.&lt;/span>S3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the ultrasonic sensor. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ultrasonic_sensor &lt;span style="color:#ff79c6">=&lt;/span> UltrasonicSensor(Port&lt;span style="color:#ff79c6">.&lt;/span>S4)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Vehicles: Comments</title><link>https://tmcdigitech.github.io/8/vehicles/gettingstarted/comments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/8/vehicles/gettingstarted/comments/</guid><description>
&lt;p>Comments are a way of leaving messages for other humans (or
you in the future) in your program. They are a vital part
of programming, and critical to writing good code that works.&lt;/p>
&lt;p>Comments are indicated using some combination of symbols,
and the computer is programmed to ignore them, so you can
write anything you like, and not have to worry about the
computer trying to make sense of it.
Because the computer ignores any text that is a comment,
we can also use comments to “turn off” some lines
of our program temporarily by “commenting them out”.&lt;/p>
&lt;p>In Python, any time the computer comes across
a &lt;code>#&lt;/code> (hash) symbol, it will ignore the rest of the line.
Most text editors have a way to automatically add and
remove comments from a selection of code.
In Visual Studio Code, the shortcut for toggling comment
markers is &lt;kbd>Ctrl&lt;/kbd>+&lt;kbd>/&lt;/kbd>
(&lt;kbd>Cmd&lt;/kbd>+&lt;kbd>/&lt;/kbd> on a Mac).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># This is a comment&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="why-do-we-need-comments">Why do we need comments?&lt;/h2>
&lt;p>Because computers are brainless machines with no clue
about anything, computer programs are extremely thorough, step-by-step sequences of instructions that tell the computer exactly what to do. They don&amp;rsquo;t, however, provide any clue
about what the program is for, why you might want to use it,
or why certain bits of code are included.&lt;/p>
&lt;p>Comments allow a human reader to get a &amp;ldquo;big picture&amp;rdquo; sense
of what chunks of the program, and the program as a whole,
are about, and why certain decisions have been made.
They are also used to leave reminders about things that
still need to be fixed, things which might cause trouble
later, and places where a problem has been found but a
solution hasn&amp;rsquo;t been worked out yet.&lt;/p></description></item><item><title>Vehicles: A starting example</title><link>https://tmcdigitech.github.io/8/vehicles/gettingstarted/asimpleexample/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tmcdigitech.github.io/8/vehicles/gettingstarted/asimpleexample/</guid><description>
&lt;p>This is a simple example which:&lt;/p>
&lt;ol>
&lt;li>beeps,&lt;/li>
&lt;li>moves forward 100mm (10cm),&lt;/li>
&lt;li>moves backward 100mm,&lt;/li>
&lt;li>turns 360° on the spot,&lt;/li>
&lt;li>beeps again.&lt;/li>
&lt;/ol>
&lt;p>Each of these steps happens to correspond
with a line of code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>ev3&lt;span style="color:#ff79c6">.&lt;/span>speaker&lt;span style="color:#ff79c6">.&lt;/span>beep()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>robot&lt;span style="color:#ff79c6">.&lt;/span>straight(&lt;span style="color:#bd93f9">100&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>robot&lt;span style="color:#ff79c6">.&lt;/span>straight(&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">100&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>robot&lt;span style="color:#ff79c6">.&lt;/span>turn(&lt;span style="color:#bd93f9">360&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ev3&lt;span style="color:#ff79c6">.&lt;/span>speaker&lt;span style="color:#ff79c6">.&lt;/span>beep()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="complete-program">Complete program&lt;/h2>
&lt;p>Here is the complete program, complete with headings
marking the major parts of the program structure.
You can see on lines 44, 47, and 50 there are lines
of code that are commented out because we don&amp;rsquo;t need
them, but they might be handy in the future!&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">65
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">66
&lt;/span>&lt;span style="white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">67
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">#!/usr/bin/env pybricks-micropython &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># ^ Shebang line above ^&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">##############################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Docstring&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">##############################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">Example LEGO® MINDSTORMS® EV3 Robot Educator Driving Base Program
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">-----------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">This program requires LEGO® EV3 MicroPython v2.0.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">Download: https://education.lego.com/en-us/support/mindstorms-ev3/python-for-ev3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">Building instructions can be found at:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">https://education.lego.com/en-us/support/mindstorms-ev3/building-instructions#robot
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">##############################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Import code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">##############################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.hubs &lt;span style="color:#ff79c6">import&lt;/span> EV3Brick
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.ev3devices &lt;span style="color:#ff79c6">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Motor,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TouchSensor,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ColorSensor,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InfraredSensor,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UltrasonicSensor,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GyroSensor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.parameters &lt;span style="color:#ff79c6">import&lt;/span> Port, Stop, Direction, Button, Color
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.tools &lt;span style="color:#ff79c6">import&lt;/span> wait, StopWatch, DataLog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.robotics &lt;span style="color:#ff79c6">import&lt;/span> DriveBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> pybricks.media.ev3dev &lt;span style="color:#ff79c6">import&lt;/span> SoundFile, ImageFile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">##############################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Setup&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">##############################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the EV3 Brick. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ev3 &lt;span style="color:#ff79c6">=&lt;/span> EV3Brick()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the motors. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>left_motor &lt;span style="color:#ff79c6">=&lt;/span> Motor(Port&lt;span style="color:#ff79c6">.&lt;/span>B)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>right_motor &lt;span style="color:#ff79c6">=&lt;/span> Motor(Port&lt;span style="color:#ff79c6">.&lt;/span>C)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the drive base. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>robot &lt;span style="color:#ff79c6">=&lt;/span> DriveBase(left_motor, right_motor, wheel_diameter&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">55.5&lt;/span>, axle_track&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#bd93f9">104&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the Touch Sensor. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># touch_sensor = TouchSensor(Port.S1) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the Colour Sensor. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># color_sensor = ColorSensor(Port.S3) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Initialize the ultrasonic sensor. &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># ultrasonic_sensor = UltrasonicSensor(Port.S4) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">##############################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># Program body&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4">##############################################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ev3&lt;span style="color:#ff79c6">.&lt;/span>speaker&lt;span style="color:#ff79c6">.&lt;/span>beep()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>robot&lt;span style="color:#ff79c6">.&lt;/span>straight(&lt;span style="color:#bd93f9">100&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>robot&lt;span style="color:#ff79c6">.&lt;/span>straight(&lt;span style="color:#ff79c6">-&lt;/span>&lt;span style="color:#bd93f9">100&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>robot&lt;span style="color:#ff79c6">.&lt;/span>turn(&lt;span style="color:#bd93f9">360&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ev3&lt;span style="color:#ff79c6">.&lt;/span>speaker&lt;span style="color:#ff79c6">.&lt;/span>beep()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>